{"version":3,"file":"component---src-pages-posts-js-ace16833526c9c39e4d3.js","mappings":"gLAYMA,EAAY,SAAHC,GAA4B,IAAtBC,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SACzBC,EAA2BF,EAAKG,KAAKC,aAA7BC,EAAKH,EAALG,MAAOC,EAAOJ,EAAPI,QACTC,EAAQP,EAAKQ,kBAAkBC,MACjCC,EAAc,EAElB,OACEC,EAAAA,cAACC,EAAAA,EAAM,CAACP,MAAOA,EAAOJ,SAAUA,EAAUY,cAAc,GACtDF,EAAAA,cAACG,EAAAA,EAAG,CACFT,MAAM,YACNU,SAAU,CAAC,gBAAD,wCACVC,KAAK,QACLC,KAAM,CACJ,CACEC,IAAK,YACLC,KAASb,EAAO,MAChBc,SAAU,SAKfpB,EAAKG,KAAKC,aAAaiB,aACtBV,EAAAA,cAAA,UAAQW,UAAU,aAChBX,EAAAA,cAAA,MAAIW,UAAU,mBACXtB,EAAKG,KAAKC,aAAaiB,cAI9BV,EAAAA,cAAA,OAAKW,UAAU,aACZf,EAAMgB,KAAI,SAAAC,GAAe,IAAZC,EAAID,EAAJC,KAEZ,OADAf,IAEEC,EAAAA,cAACe,EAAAA,EAAQ,CACPC,IAAKF,EAAKG,OAAOC,KACjBC,MAAOpB,EACPe,KAAMA,EACNM,UAAS,QAGf,KAIR,EAwCA,mBAAgBC,GAAK,OACnBrB,EAAAA,cAACsB,EAAAA,YAAW,CACVC,MAxCY,aAyCZC,OAAQ,SAACnC,GAAI,OACXW,EAAAA,cAACb,EAASsC,OAAAC,OAAA,CAACpC,SAAU+B,EAAM/B,SAAU+B,OAAK,EAAChC,KAAMA,GAAUgC,GAAS,GAGzE,C,+CClGD,aAAgBA,GAAK,OACnBrB,EAAAA,cAAA,WACEW,UAAS,cAAeU,EAAMF,MAAQ,GAAM,GAAC,mBAAqB,IAChEE,EAAMD,UAAS,KACbC,EAAMP,KAAKa,YAAYC,UAAS,yBACpCC,MACER,EAAMP,KAAKa,YAAYC,WAAa,CAClCE,gBAAgB,OAAQT,EAAMP,KAAKa,YAAYC,UAAUG,gBAAgBC,MAAMC,IAAG,MAItFjC,EAAAA,cAACkC,EAAAA,EAAI,CAACC,GAAId,EAAMP,KAAKG,OAAOC,KAAMP,UAAU,kBAC1CX,EAAAA,cAAA,OAAKW,UAAU,qBACbX,EAAAA,cAAA,MAAIW,UAAU,mBACXU,EAAMP,KAAKa,YAAYjC,OAAS2B,EAAMP,KAAKG,OAAOC,QAK5D,C,iECwED,IAzFe,SAACG,GACd,IAAQ3B,EAAoD2B,EAApD3B,MAAO0C,EAA6Cf,EAA7Ce,SAAU9C,EAAmC+B,EAAnC/B,SAAQ+C,EAA2BhB,EAAzBnB,aAAAA,OAAY,IAAAmC,GAAQA,EACvDC,EAAkCtC,EAAAA,UAAe,GAA1CuC,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAA8BzC,EAAAA,SAAe,CAAE0C,QAAS,KAAMxC,aAAAA,IAAvDyC,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACpBI,EAA+B,MAAtBvD,EAASwD,UAA0C,aAAtBxD,EAASwD,SAErD,OACE9C,EAAAA,cAAC+C,EAAAA,EAAgBC,SAAQ,CAACC,MAAO,CAACN,EAASC,IACzC5C,EAAAA,cAAA,OAAKW,UAAS,iBAAkB4B,EAAS,sBACvCvC,EAAAA,cAAA,UAAQW,UAAU,aAChBX,EAAAA,cAAA,OAAKW,UAAU,uBACbX,EAAAA,cAAA,UACEW,UAAU,aACVuC,QAAS,WAAF,OAAQV,GAAcD,EAAU,GAEvCvC,EAAAA,cAAA,OACEW,UAAU,gCACV,aAAW,OACXwC,KAAK,SACL,gBAAc,cAEdnD,EAAAA,cAAA,OAAKW,UAAU,iBACbX,EAAAA,cAAA,OAAKW,UAAU,uBAIrBX,EAAAA,cAAA,OAAKoD,GAAG,OAAOzC,UAAU,kBAEvBX,EAAAA,cAAA,MAAIW,UAAU,MAAMwC,KAAK,QAEvBnD,EAAAA,cAAA,MACEW,UAAW,CAAC,WAAYkC,EAAS,cAAgB,IAC9CQ,QAAO,SAACC,GAAC,QAAOA,CAAC,IACjBC,KAAK,KACRJ,KAAK,YAELnD,EAAAA,cAACkC,EAAAA,EAAI,CAACC,GAAG,KAAI,SAGfnC,EAAAA,cAAA,MACEW,UAAW,CAAC,YAAckC,EAAyB,GAAhB,eAAoBU,KACrD,KAEFJ,KAAK,YAELnD,EAAAA,cAACkC,EAAAA,EAAI,CAACC,GAAG,UAAS,YAIxBnC,EAAAA,cAAA,OAAKW,UAAU,oBACbX,EAAAA,cAACkC,EAAAA,EAAI,CAACvB,UAAU,iBAAiBwB,GAAE,KAChCzC,IAGJiD,EAAQzC,cACPF,EAAAA,cAAA,OAAKW,UAAU,mBACbX,EAAAA,cAAA,OAAKW,UAAU,kBACbX,EAAAA,cAACkC,EAAAA,EAAI,CACHC,GAAI7C,EAASwD,SACbU,UAAU,KACV9D,MAAM,cACP,WAGDM,EAAAA,cAACkC,EAAAA,EAAI,CACHC,GAAI7C,EAASwD,SACbU,UAAU,KACV9D,MAAM,cACP,eAQXM,EAAAA,cAAA,QAAMoD,GAAG,YAAYzC,UAAU,aAC7BX,EAAAA,cAAA,OAAKoD,GAAG,OAAOzC,UAAU,mBACtByB,IAGLpC,EAAAA,cAAA,UAAQW,UAAU,aAAY,MACpB,IAAI8C,MAAOC,cAAc,IAAC1D,EAAAA,cAACkC,EAAAA,EAAI,CAACC,GAAE,KAAQzC,KAK5D,C","sources":["webpack://gatsby-london/./src/pages/posts.js","webpack://gatsby-london/./src/components/postCard.js","webpack://gatsby-london/./src/layouts/en.js"],"sourcesContent":["import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../layouts/en\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data, location }) => {\n  const { title, siteUrl } = data.site.siteMetadata\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={title} location={location} isTranslated={true}>\n      <SEO\n        title=\"All posts\"\n        keywords={[`Eric Peterson`, `Blog`, `Engineer`, `Musician`, `Saudade`]}\n        lang=\"en-US\"\n        link={[\n          {\n            rel: \"alternate\",\n            href: `${siteUrl}/sv`,\n            hreflang: \"sv\",\n          },\n        ]}\n      />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            {data.site.siteMetadata.description}\n          </h2>\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { langKey: { eq: \"en\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            langKey\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default (props) => (\n  <StaticQuery\n    query={indexQuery}\n    render={(data) => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n","import React from \"react\"\nimport Link from \"./link\"\n\nexport default (props) => (\n  <article\n    className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${props.node.frontmatter.thumbnail.childImageSharp.fluid.src})`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title || props.node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport Link from \"../components/link\"\nimport { LanguageContext } from \"../contexts/language\"\nimport \"../i18n\"\n\nconst Layout = (props) => {\n  const { title, children, location, isTranslated = false } = props\n  const [toggleNav, setToggleNav] = React.useState(false)\n  const [context, setContext] = React.useState({ langKey: \"en\", isTranslated })\n  const isHome = location.pathname === \"/\" || location.pathname === \"/terson/\"\n\n  return (\n    <LanguageContext.Provider value={[context, setContext]}>\n      <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n        <header className=\"site-head\">\n          <div className=\"site-head-container\">\n            <button\n              className=\"nav-burger\"\n              onClick={() => setToggleNav(!toggleNav)}\n            >\n              <div\n                className=\"hamburger hamburger--collapse\"\n                aria-label=\"Menu\"\n                role=\"button\"\n                aria-controls=\"navigation\"\n              >\n                <div className=\"hamburger-box\">\n                  <div className=\"hamburger-inner\" />\n                </div>\n              </div>\n            </button>\n            <nav id=\"swup\" className=\"site-head-left\">\n              {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n              <ul className=\"nav\" role=\"menu\">\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n                <li\n                  className={[\"nav-home\", isHome ? \"nav-current\" : \"\"]\n                    .filter((c) => !!c)\n                    .join(\" \")}\n                  role=\"menuitem\"\n                >\n                  <Link to=\"/\">Home</Link>\n                </li>\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n                <li\n                  className={[\"nav-posts\", !isHome ? \"nav-current\" : \"\"].join(\n                    \" \"\n                  )}\n                  role=\"menuitem\"\n                >\n                  <Link to=\"/posts\">Posts</Link>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"site-head-center\">\n              <Link className=\"site-head-logo\" to={`/`}>\n                {title}\n              </Link>\n            </div>\n            {context.isTranslated && (\n              <div className=\"site-head-right\">\n                <div className=\"language-links\">\n                  <Link\n                    to={location.pathname}\n                    forceLang=\"en\"\n                    title=\"In English\"\n                  >\n                    English\n                  </Link>\n                  <Link\n                    to={location.pathname}\n                    forceLang=\"sv\"\n                    title=\"PÃ¥ Svenska\"\n                  >\n                    Svenska\n                  </Link>\n                </div>\n              </div>\n            )}\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\">\n          <div id=\"swup\" className=\"transition-fade\">\n            {children}\n          </div>\n        </main>\n        <footer className=\"site-foot\">\n          &copy; {new Date().getFullYear()} <Link to={`/`}>{title}</Link>\n        </footer>\n      </div>\n    </LanguageContext.Provider>\n  )\n}\n\nexport default Layout\n"],"names":["BlogIndex","_ref","data","location","_data$site$siteMetada","site","siteMetadata","title","siteUrl","posts","allMarkdownRemark","edges","postCounter","React","Layout","isTranslated","SEO","keywords","lang","link","rel","href","hreflang","description","className","map","_ref2","node","PostCard","key","fields","slug","count","postClass","props","StaticQuery","query","render","Object","assign","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","Link","to","children","_props$isTranslated","_React$useState","toggleNav","setToggleNav","_React$useState2","langKey","context","setContext","isHome","pathname","LanguageContext","Provider","value","onClick","role","id","filter","c","join","forceLang","Date","getFullYear"],"sourceRoot":""}