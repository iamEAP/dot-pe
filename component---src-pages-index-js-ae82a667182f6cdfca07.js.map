{"version":3,"file":"component---src-pages-index-js-ae82a667182f6cdfca07.js","mappings":"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","sources":["webpack://gatsby-london/./src/layouts/en.js","webpack://gatsby-london/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport Link from \"../components/link\"\nimport { LanguageContext } from \"../contexts/language\"\nimport \"../i18n\"\n\nconst Layout = props => {\n  const { title, children, location, isTranslated = false } = props\n  const [toggleNav, setToggleNav] = React.useState(false)\n  const [context, setContext] = React.useState({ langKey: \"en\", isTranslated })\n\n  return (\n    <LanguageContext.Provider value={[context, setContext]}>\n      <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n        <header className=\"site-head\">\n          <div className=\"site-head-container\">\n            <button\n              className=\"nav-burger\"\n              onClick={() => setToggleNav(!toggleNav)}\n            >\n              <div\n                className=\"hamburger hamburger--collapse\"\n                aria-label=\"Menu\"\n                role=\"button\"\n                aria-controls=\"navigation\"\n              >\n                <div className=\"hamburger-box\">\n                  <div className=\"hamburger-inner\" />\n                </div>\n              </div>\n            </button>\n            <nav id=\"swup\" className=\"site-head-left\">\n              {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n              <ul className=\"nav\" role=\"menu\">\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n                <li className=\"nav-home nav-current\" role=\"menuitem\">\n                  <Link to=\"/\">Home</Link>\n                </li>\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n                <li className=\"nav-about\" role=\"menuitem\">\n                  <Link to=\"/posts\">Posts</Link>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"site-head-center\">\n              <Link className=\"site-head-logo\" to={`/`}>\n                {title}\n              </Link>\n            </div>\n            {context.isTranslated && (\n              <div className=\"site-head-right\">\n                <div className=\"language-links\">\n                  <Link\n                    to={location.pathname}\n                    forceLang=\"en\"\n                    title=\"In English\"\n                  >\n                    English\n                  </Link>\n                  <Link\n                    to={location.pathname}\n                    forceLang=\"sv\"\n                    title=\"PÃ¥ Svenska\"\n                  >\n                    Svenska\n                  </Link>\n                </div>\n              </div>\n            )}\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\">\n          <div id=\"swup\" className=\"transition-fade\">\n            {children}\n          </div>\n        </main>\n        <footer className=\"site-foot\">\n          &copy; {new Date().getFullYear()} <Link to={`/`}>{title}</Link>\n        </footer>\n      </div>\n    </LanguageContext.Provider>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../layouts/en\"\nimport SEO from \"../components/seo\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\nconst AboutPage = ({ data, location }) => {\n  const { title, siteUrl } = data.site.siteMetadata\n\n  return (\n    <Layout title={title} location={location} isTranslated={true}>\n      <SEO\n        title=\"About\"\n        keywords={[`Eric Peterson`, `Engineer`, `Musician`, `Saudade`]}\n        lang=\"en-US\"\n        link={[\n          {\n            rel: \"alternate\",\n            href: `${siteUrl}/sv/is`,\n            hreflang: \"sv\",\n          },\n        ]}\n      />\n\n      <article className=\"post-content page-template no-image\">\n        <div className=\"post-content-body\">\n          <h2 id=\"clean-minimal-and-deeply-customisable-london-is-a-theme-made-for-people-who-appreciate-simple-lines-\">\n            Eric Peterson creates software and music, usually on computers.\n            Sometimes in real life.\n          </h2>\n          <figure className=\"kg-card kg-image-card kg-width-full\">\n            <Img\n              fluid={data.eapAtTractor.childImageSharp.fluid}\n              className=\"kg-image\"\n            />\n            <figcaption>Photo by Tony Mihovilovich</figcaption>\n          </figure>\n          <h3 id=\"music\">Music</h3>\n          <ul>\n            <li>\n              <strong>Currently</strong>: solo work as time allows.\n            </li>\n            <li>\n              <strong>Previously</strong>:{\" \"}\n              <a\n                href=\"https://open.spotify.com/artist/7h769bq6OFp1gm0h7zFrW9\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Golden Idols\n              </a>\n              ,&nbsp;\n              <a\n                href=\"https://open.spotify.com/artist/3hNw9tlTAG1NKzUip7FMJy\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Houses\n              </a>\n              ,&nbsp;\n              <a\n                href=\"https://open.spotify.com/album/7hippNatzXIFuxvkdbIpgA\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Amazing Twin\n              </a>\n              ,&nbsp;\n              <a\n                href=\"https://open.spotify.com/album/7pCllDE8OKLB0u0CgfAbFp\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Roger, Roll\n              </a>\n              , and others in Denver circa 2007-2011.\n            </li>\n            <li>\n              <strong>Production/engineering</strong> for&nbsp;\n              <a\n                href=\"https://iamthedot.bandcamp.com/album/a-collection-of-songs-2008-2010\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                I Am the Dot\n              </a>\n              ,&nbsp;\n              <a\n                href=\"https://kvdu.bandcamp.com/album/kvdu-live\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                KVDU Live Vol 1\n              </a>\n              ,&nbsp; and others.\n            </li>\n            <li>Pacific Northwest Bossa Nova</li>\n          </ul>\n          <h3 id=\"software\">Software</h3>\n          <ul>\n            <li>\n              <strong>Currently</strong>: focused on{\" \"}\n              <a\n                href=\"https://backstage.io/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Backstage, an open source developer portal\n              </a>{\" \"}\n              platform.\n            </li>\n            <li>\n              <strong>Co-founder at Automaton</strong>, a QA automation platform\n              for SaaS and marketing technology.\n            </li>\n            <li>\n              <strong>8 years at Tableau</strong> in Seattle: Director,\n              Marketing Engineering. Responsible for web, data, and QA\n              engineering.\n            </li>\n            <li>\n              First introduced to <strong>open source software</strong> through\n              Drupal at the Open Media Foundation\n            </li>\n            <li>\n              Formal education at the <strong>University of Denver</strong>:\n              dual degree B.S. Computer Science, B.A. Digital Media. Most\n              influential course: Unix Tools\n            </li>\n            <li>\n              One of those people who got started{\" \"}\n              <strong>back in the Geocities</strong> days. Proud MySpace CSS\n              hacker.\n            </li>\n          </ul>\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    eapAtTractor: file(relativePath: { eq: \"eap-at-tractor.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1360) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <AboutPage location={props.location} data={data} {...props} />\n    )}\n  />\n)\n"],"names":["props","title","children","location","_props$isTranslated","isTranslated","_React$useState","React","toggleNav","setToggleNav","_React$useState2","langKey","context","setContext","LanguageContext","Provider","value","className","onClick","role","id","Link","to","pathname","forceLang","Date","getFullYear","AboutPage","_ref","data","_data$site$siteMetada","site","siteMetadata","siteUrl","Layout","SEO","keywords","lang","link","rel","href","hreflang","Img","fluid","eapAtTractor","childImageSharp","target","StaticQuery","query","render","Object","assign"],"sourceRoot":""}