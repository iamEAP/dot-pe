{"version":3,"file":"component---src-pages-posts-sv-js-a6d418fb44f43f6394c7.js","mappings":"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","sources":["webpack://gatsby-london/./src/components/postCard.js","webpack://gatsby-london/./src/layouts/sv.js","webpack://gatsby-london/./src/pages/posts.sv.js"],"sourcesContent":["import React from \"react\"\nimport Link from \"./link\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${props.node.frontmatter.thumbnail.childImageSharp.fluid.src})`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title || props.node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport Link from \"../components/link\"\nimport { LanguageContext } from \"../contexts/language\"\nimport \"../i18n\"\n\nconst Layout = props => {\n  const { title, children, location, isTranslated = false } = props\n  const [toggleNav, setToggleNav] = React.useState(false)\n  const [context, setContext] = React.useState({ langKey: \"sv\", isTranslated })\n  const isHome =\n    location.pathname === \"/sv/\" || location.pathname === \"/terson/sv/\"\n\n  return (\n    <LanguageContext.Provider value={[context, setContext]}>\n      <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n        <header className=\"site-head\">\n          <div className=\"site-head-container\">\n            <button\n              className=\"nav-burger\"\n              onClick={() => setToggleNav(!toggleNav)}\n            >\n              <div\n                className=\"hamburger hamburger--collapse\"\n                aria-label=\"Menu\"\n                role=\"button\"\n                aria-controls=\"navigation\"\n              >\n                <div className=\"hamburger-box\">\n                  <div className=\"hamburger-inner\" />\n                </div>\n              </div>\n            </button>\n            <nav id=\"swup\" className=\"site-head-left\">\n              {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n              <ul className=\"nav\" role=\"menu\">\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n                <li\n                  className={[\"nav-home\", isHome ? \"nav-current\" : \"\"]\n                    .filter(c => !!c)\n                    .join(\" \")}\n                  role=\"menuitem\"\n                >\n                  <Link to=\"/\">Startsida</Link>\n                </li>\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n                <li\n                  className={[\"nav-posts\", !isHome ? \"nav-current\" : \"\"].join(\n                    \" \"\n                  )}\n                  role=\"menuitem\"\n                >\n                  <Link to=\"/posts\">Inlägg</Link>\n                </li>\n                {/*<li className=\"nav-elements\" role=\"menuitem\">\n                  <Link to={`/elements`}>Elements</Link>\n                </li>*/}\n              </ul>\n            </nav>\n            <div className=\"site-head-center\">\n              <Link className=\"site-head-logo\" to={`/`}>\n                {title}\n              </Link>\n            </div>\n            {context.isTranslated && (\n              <div className=\"site-head-right\">\n                <div className=\"language-links\">\n                  <Link\n                    to={location.pathname}\n                    forceLang=\"en\"\n                    title=\"In English\"\n                  >\n                    English\n                  </Link>\n                  <Link\n                    to={location.pathname}\n                    forceLang=\"sv\"\n                    title=\"På Svenska\"\n                  >\n                    Svenska\n                  </Link>\n                </div>\n              </div>\n            )}\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\">\n          <div id=\"swup\" className=\"transition-fade\">\n            {children}\n          </div>\n        </main>\n        <footer className=\"site-foot\">\n          &copy; {new Date().getFullYear()} <Link to={`/`}>{title}</Link>\n        </footer>\n      </div>\n    </LanguageContext.Provider>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../layouts/sv\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data, location }) => {\n  const { title, siteUrl } = data.site.siteMetadata\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={title} location={location} isTranslated={true}>\n      <SEO\n        title=\"Alla inlägg\"\n        keywords={[`Eric Peterson`, `Blogg`, `Ingenjör`, `Musiker`, `Saudade`]}\n        lang=\"sv-SE\"\n        link={[\n          {\n            rel: \"alternate\",\n            href: `${siteUrl}`,\n            hreflang: \"en\",\n          },\n        ]}\n      />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">Från Eric Petersons Hjärna</h2>\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { langKey: { eq: \"sv\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            langKey\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"names":["props","React","className","count","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","Link","to","fields","slug","title","children","location","_props$isTranslated","isTranslated","_React$useState","toggleNav","setToggleNav","_React$useState2","langKey","context","setContext","isHome","pathname","LanguageContext","Provider","value","onClick","role","id","filter","c","join","forceLang","Date","getFullYear","BlogIndex","_ref","data","_data$site$siteMetada","site","siteMetadata","siteUrl","posts","allMarkdownRemark","edges","postCounter","Layout","SEO","keywords","lang","link","rel","href","hreflang","description","map","_ref2","PostCard","key","StaticQuery","query","render","Object","assign"],"sourceRoot":""}