{"version":3,"file":"component---src-pages-index-js-c075275a0c03015c8cda.js","mappings":"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","sources":["webpack://gatsby-london/./src/components/postCard.js","webpack://gatsby-london/./src/layouts/en.js","webpack://gatsby-london/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport Link from \"./link\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${props.node.frontmatter.thumbnail.childImageSharp.fluid.src})`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title || props.node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport Link from \"../components/link\"\nimport { LanguageContext } from \"../contexts/language\"\nimport \"../i18n\"\n\nconst Layout = props => {\n  const { title, children, location, isTranslated = false } = props\n  const [toggleNav, setToggleNav] = React.useState(false)\n  const [context, setContext] = React.useState({ langKey: \"en\", isTranslated })\n\n  return (\n    <LanguageContext.Provider value={[context, setContext]}>\n      <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n        <header className=\"site-head\">\n          <div className=\"site-head-container\">\n            <button\n              className=\"nav-burger\"\n              onClick={() => setToggleNav(!toggleNav)}\n            >\n              <div\n                className=\"hamburger hamburger--collapse\"\n                aria-label=\"Menu\"\n                role=\"button\"\n                aria-controls=\"navigation\"\n              >\n                <div className=\"hamburger-box\">\n                  <div className=\"hamburger-inner\" />\n                </div>\n              </div>\n            </button>\n            <nav id=\"swup\" className=\"site-head-left\">\n              {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n              <ul className=\"nav\" role=\"menu\">\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n                <li className=\"nav-home nav-current\" role=\"menuitem\">\n                  <Link to=\"/\">Home</Link>\n                </li>\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-to-interactive-role */}\n                <li className=\"nav-about\" role=\"menuitem\">\n                  <Link to=\"/is\">About</Link>\n                </li>\n              </ul>\n            </nav>\n            <div className=\"site-head-center\">\n              <Link className=\"site-head-logo\" to={`/`}>\n                {title}\n              </Link>\n            </div>\n            {context.isTranslated && (\n              <div className=\"site-head-right\">\n                <div className=\"language-links\">\n                  <Link\n                    to={location.pathname}\n                    forceLang=\"en\"\n                    title=\"In English\"\n                  >\n                    English\n                  </Link>\n                  <Link\n                    to={location.pathname}\n                    forceLang=\"sv\"\n                    title=\"PÃ¥ Svenska\"\n                  >\n                    Svenska\n                  </Link>\n                </div>\n              </div>\n            )}\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\">\n          <div id=\"swup\" className=\"transition-fade\">\n            {children}\n          </div>\n          <form\n            action=\"https://gumroad.com/follow_from_embed_form\"\n            className=\"post-content\"\n            method=\"post\"\n            target=\"_blank\"\n            style={{ paddingBottom: 0 }}\n          >\n            <input name=\"seller_id\" type=\"hidden\" value=\"2626546698508\" />\n            <div className=\"row gtr-uniform\">\n              <div class=\"col-10 col-12-xsmall\">\n                <input\n                  name=\"email\"\n                  placeholder=\"Your email address\"\n                  type=\"email\"\n                />\n              </div>\n              <div className=\"col-2 col-12-xsmall\">\n                <button type=\"submit\" className=\"button primary fit\">\n                  Follow\n                </button>\n              </div>\n            </div>\n          </form>\n        </main>\n        <footer className=\"site-foot\">\n          &copy; {new Date().getFullYear()} <Link to={`/`}>{title}</Link>{\" \"}\n          &mdash; Built with{\" \"}\n          <a\n            href=\"https://gatsbyjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ color: \"rgb(171, 171, 171)\" }}\n          >\n            Gatsby\n          </a>\n        </footer>\n      </div>\n    </LanguageContext.Provider>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../layouts/en\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\n// import \"../utils/global.scss\"\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\n//TODO: switch to staticQuery, get rid of comments, remove unnecessary components, export as draft template\nconst BlogIndex = ({ data, location }) => {\n  const { title, siteUrl } = data.site.siteMetadata\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={title} location={location} isTranslated={true}>\n      <SEO\n        title=\"All posts\"\n        keywords={[`Eric Peterson`, `Blog`, `Engineer`, `Musician`, `Saudade`]}\n        lang=\"en-US\"\n        link={[\n          {\n            rel: \"alternate\",\n            href: `${siteUrl}/sv`,\n            hreflang: \"sv\",\n          },\n        ]}\n      />\n      {/* <Bio /> */}\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            {data.site.siteMetadata.description}\n          </h2>\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { langKey: { eq: \"en\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            langKey\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"names":["props","className","count","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","to","fields","slug","title","children","location","isTranslated","React","toggleNav","setToggleNav","langKey","context","setContext","value","onClick","role","id","pathname","forceLang","action","method","target","paddingBottom","name","type","class","placeholder","Date","getFullYear","href","rel","color","BlogIndex","data","site","siteMetadata","siteUrl","posts","allMarkdownRemark","edges","postCounter","keywords","lang","link","hreflang","description","map","key","StaticQuery","query","render"],"sourceRoot":""}